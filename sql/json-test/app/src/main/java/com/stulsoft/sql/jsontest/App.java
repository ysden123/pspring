/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.stulsoft.sql.jsontest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import java.util.ArrayList;
import java.util.List;

@SpringBootApplication
public class App implements CommandLineRunner {
    private static final Logger logger = LoggerFactory.getLogger(App.class);

    private final WithJsonService withJsonService;

    public App(WithJsonService withJsonService) {
        this.withJsonService = withJsonService;
    }

    public static void main(String[] args) {
        SpringApplication.run(App.class, args);
    }

    @Override
    public void run(String... args) throws Exception {
            logger.info("==>run");
            fill();
            findAll();
            findCountTest();
            findCountTriple();
    }

    private void fill() {
        logger.info("==>findAll");
        withJsonService.clear();

        List<WithJson> withJsons = new ArrayList<>();
        for (int i = 1; i <= 10; ++i) {
            WithJson withJson = new WithJson();
            withJson.setType(JsonTypes.test);
            withJson.setJsonData(String.format("{\"c1\":%d}", i));
            withJsons.add(withJson);
        }

        for (int i = 1; i <= 10; ++i) {
            WithJson withJson = new WithJson();
            withJson.setType(JsonTypes.triple);
            if (i%2==0)
            withJson.setJsonData(String.format("{\"c1\":%d, \"c2\":%d, \"c3\":%d}", i, i + 1, i + 2));
            else
                withJson.setJsonData(String.format("{\"c1\":%d,  \"c3\":%d}", i, i + 2));
            withJsons.add(withJson);
        }

        withJsonService.add(withJsons);
    }

    private void findAll() {
        logger.info("==>findAll");
        List<WithJson> result = withJsonService.findAll();
        logger.info("result.size()={}", result.size());

        result.forEach(withJson -> logger.info("{}", withJson));
    }

    private void findCountTest() {
        logger.info("==>findCountTest");
        Integer result = withJsonService.findCountTest();
        logger.info("result = {}", result);
    }
    private void findCountTriple() {
        logger.info("==>findCountTriple");
        WithJsonService.TripleCount result = withJsonService.findCountTriple();
        logger.info("result = {}", result);
    }

}
